{"version":3,"sources":["webpack:///./src/hooks/useSite.js","webpack:///./src/templates/blogTemplate.module.css","webpack:///./src/templates/blogTemplate.js"],"names":["useSite","useStaticQuery","site","siteMetadata","module","exports","Template","data","location","markdownRemark","frontmatter","html","featuredImgFluid","featuredImage","childImageSharp","fluid","title","src","left","className","styles","content","date","style","marginBottom","url","href","iconClass","post","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,kDACO,SAASA,IAad,OAZiBC,yBAAe,cAAxBC,KAYIC,e,qBCbdC,EAAOC,QAAU,CAAC,QAAU,sCAAsC,UAAY,wCAAwC,KAAO,mCAAmC,KAAO,qC,kCCDvK,sJAQe,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,SAEQC,EAAmBF,EAAnBE,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACfT,EAAOF,cAETY,EADOL,EAAKE,eACYC,YAAYG,cAAcC,gBAAgBC,MACtE,OACE,oCACE,kBAAC,IAAD,CACEC,MAAON,EAAYM,MACnBd,KAAMA,EACNW,cAAeD,EAAiBK,MAElC,6BACE,kBAAC,IAAD,CAAKF,MAAOH,IACZ,kBAAC,IAAD,CAAcI,MAAON,EAAYM,MAAOE,MAAM,IAC9C,yBAAKC,UAAWC,IAAOC,SACrB,wBAAIF,UAAWC,IAAOE,KAAMC,MAAO,CAAEC,aAAc,IAChDd,EAAYY,MAEf,kBAAC,IAAD,CAAQG,IAAKjB,EAASkB,KAAMC,UAAWP,IAAOO,YAE9C,yBACER,UAAWC,IAAOQ,KAClBC,wBAAyB,CAAEC,OAAQnB","file":"component---src-templates-blog-template-js-6676b7a3aa33780da7ea.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nexport function useSite() {\n  const { site } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n          lang\n        }\n      }\n    }\n  `)\n  return site.siteMetadata\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"blogTemplate-module--content--2Dyrg\",\"iconClass\":\"blogTemplate-module--iconClass--2TuGh\",\"date\":\"blogTemplate-module--date--wlawP\",\"post\":\"blogTemplate-module--post--YTpWw\"};","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { SEO, SectionTitle } from \"../components\"\nimport { useSite } from \"../hooks/useSite\"\nimport styles from \"./blogTemplate.module.css\"\nimport Social from \"../components/social\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  location,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  const site = useSite()\n  let post = data.markdownRemark\n  let featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid\n  return (\n    <>\n      <SEO\n        title={frontmatter.title}\n        site={site}\n        featuredImage={featuredImgFluid.src}\n      />\n      <div>\n        <Img fluid={featuredImgFluid} />\n        <SectionTitle title={frontmatter.title} left={true} />\n        <div className={styles.content}>\n          <h2 className={styles.date} style={{ marginBottom: 0 }}>\n            {frontmatter.date}\n          </h2>\n          <Social url={location.href} iconClass={styles.iconClass} />\n\n          <div\n            className={styles.post}\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}